import requests, re
from bs4 import BeautifulSoup

def createFighterBasicStatsSoup(soup):
    '''
    Creates a beautiful soup object targeting the box_list items containing fighter stats
        
        Args:
            
            soup (bs4 object): unmodified BeautifulSoup object extracted from ufcstats.com/fighters list
        
        Output:
            
            soup (bs4 object): enables extraction of fighter statistics
    '''   
    
    basic_stats_soup = soup.findChildren('li', attrs={'class': re.compile('b-list')})
    
    return basic_stats_soup

def extractFighterName(soup):
    '''
    Identifies fighter history to be parsed.
    
        Args:
            soup (bs4 object): BeautifulSoup object must originate from the ufcstats.com section '''
    
    name_soup = soup.find('span', attrs={'class': re.compile('b-content__title-highlight')})
    
    name = name_soup.text.strip()
    
    return name

def extractFighterRecord(soup):
    '''
    Extracts each fighter's fighting record from a beautiful soup object
        
        Args:
            
            soup (bs4 object): unmodified BeautifulSoup object extracted from ufcstats.com/fighters list
        
        Output:
            
            tuple: wins, losses, draws
    '''
    
    record_children = soup.findChildren('span', attrs={'class': re.compile('b-content__title-record')})
    
    record_list = record_children[0].text.split(':')[1].strip().split("-")
    
    wins, loses, draws = record_list
    
    return wins, loses, draws

def extractBasicStatsHeight(soup):
    '''
    Extracts fighter height from modified soup object included as argument.
        
        Args:

            soup (bs4 object): base_stats object generated by createFighterBasicStatsSoup()
    '''
            
    basic_stats_soup = createFighterBasicStatsSoup(soup)
    
    height_list = list(filter(lambda x: x.isdigit(), basic_stats_soup[0].text))
    
    #feet
    height_feet = height_list[0]
    
    #inches
    height_inches = height_list[1]
    
    return height_feet, height_inches

def extractBasicStatsWeight(soup):
    '''
    Extracts fighter weight from modified soup object included as argument.
        
        Args:

            soup (bs4 object): base_stats object generated by createFighterBasicStatsSoup()
    '''
            
    basic_stats_soup = createFighterBasicStatsSoup(soup)
    
    weight = list(filter(lambda x: x.isdigit(), basic_stats_soup[1].text))#.split()))#basic_stats_soup[1].text#base_stats[1].text.strip().split(':')[1].strip().replace(' lbs.', '')
    
    weight = "".join(weight)
    
    return weight

def extractBasicStatsReach(soup):
    '''
    Extracts fighter weight from modified soup object included as argument.
        
        Args:

            soup (bs4 object): base_stats object generated by createFighterBasicStatsSoup()
    '''
    basic_stats_soup = createFighterBasicStatsSoup(soup)
    
    reach = list(filter(lambda x: x.isnumeric(), basic_stats_soup[2].text))#.split(':')[1]))#.strip()#.replace('"', '')
    
    reach = "".join(reach)
    
    return reach

def extractBasicStatsStance(soup):
    
    '''
    Extracts fighter stance from modified soup object included as argument.
        
        Args:

            soup (bs4 object): base_stats object generated by createFighterBasicStatsSoup()
    '''
    
    basic_stats_soup = createFighterBasicStatsSoup(soup)
    
    stance = basic_stats_soup[3].text.split(':')[1].strip()
    
    return stance

def extractBasicStatsDOB(soup):
    
    '''
    Extracts fighter date of beirth from modified soup object included as argument.
        
        Args:

            soup (bs4 object): base_stats object generated by createFighterBasicStatsSoup()
    '''
    
    basic_stats_soup = createFighterBasicStatsSoup(soup)
    
    DOB = basic_stats_soup[4].text.split(':')[1].strip()
    
    return DOB